{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","onAdd","useState","query","setQuery","foundMovie","setFoundMovie","isFinding","setIsFinding","isNotFinding","setIsNotFinding","isSearch","setIsSearch","handleOnClick","useCallback","event","preventDefault","fetch","then","res","json","catch","Response","Error","getMovie","data","Object","hasOwn","Title","Poster","Plot","imdbID","newMovie","finally","handleOnChange","newQuery","handleOnAdd","htmlFor","type","id","placeholder","cn","value","onChange","target","disabled","onClick","App","setMovies","some","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f4184c59.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useCallback, useState } from 'react';\nimport cn from 'classnames';\nimport './FindMovie.scss';\nimport { Movie } from '../../types/Movie';\nimport { getMovie } from '../../api';\nimport { MovieData } from '../../types/MovieData';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  onAdd: (newMovie: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ onAdd }) => {\n  const [query, setQuery] = useState('');\n  const [foundMovie, setFoundMovie] = useState<Movie | null>(null);\n  const [isFinding, setIsFinding] = useState(false);\n  const [isNotFinding, setIsNotFinding] = useState(false);\n  const [isSearch, setIsSearch] = useState(false);\n\n  const handleOnClick = useCallback((event: React.FormEvent) => {\n    event.preventDefault();\n    setIsFinding(true);\n    setIsSearch(true);\n\n    getMovie(query)\n      .then(data => {\n        if (Object.hasOwn(data, 'Error')) {\n          setIsNotFinding(true);\n          setQuery('');\n          setFoundMovie(null);\n        } else {\n          const {\n            Title,\n            Poster,\n            Plot,\n            imdbID,\n          } = data as MovieData;\n\n          const newMovie: Movie = {\n            title: Title,\n            description: Plot,\n            imgUrl: Poster === 'N/A'\n              ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n              : Poster,\n            imdbId: imdbID,\n            imdbUrl: `https://www.imdb.com/title/${imdbID}`,\n          };\n\n          setFoundMovie(newMovie);\n        }\n      })\n      .finally(() => {\n        setIsFinding(false);\n      });\n  }, [query]);\n\n  const handleOnChange = useCallback((newQuery: string) => {\n    setQuery(newQuery);\n    setIsNotFinding(false);\n  }, [query]);\n\n  const handleOnAdd = useCallback((newMovie: Movie) => {\n    onAdd(newMovie);\n    setQuery('');\n    setFoundMovie(null);\n    setIsNotFinding(false);\n    setIsSearch(false);\n  }, [foundMovie]);\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={cn('input', {\n                'is-danger': isNotFinding,\n              })}\n              value={query}\n              onChange={event => handleOnChange(event.target.value)}\n            />\n          </div>\n\n          {isNotFinding && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={cn('button', 'is-light', {\n                'is-loading': isFinding,\n              })}\n              disabled={query === ''}\n              onClick={handleOnClick}\n            >\n              {isSearch\n                ? (\n                  'Search again'\n                ) : (\n                  'Find a movie'\n                )}\n            </button>\n          </div>\n\n          {foundMovie\n              && (\n                <button\n                  data-cy=\"addButton\"\n                  type=\"button\"\n                  className=\"button is-primary\"\n                  onClick={() => handleOnAdd(foundMovie)}\n                >\n                  Add to the list\n                </button>\n              )}\n        </div>\n      </form>\n\n      {foundMovie\n        && (\n          <div className=\"container\" data-cy=\"previewContainer\">\n            <h2 className=\"title\">Preview</h2>\n            <MovieCard\n              movie={foundMovie}\n            />\n          </div>\n        )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=b65d2e7b';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useCallback, useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const handleOnAdd = useCallback((newMovie: Movie) => {\n    const isMovieInList = movies.some(movie => {\n      return movie.imdbId === newMovie.imdbId;\n    });\n\n    if (isMovieInList) {\n      return;\n    }\n\n    setMovies([\n      ...movies,\n      newMovie,\n    ]);\n  }, [movies]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList\n          movies={movies}\n        />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          onAdd={handleOnAdd}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}